{% set name = "time-machine" %}
{% set alt_name = name.replace('-', '_') %}
{% set version = "2.16.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - folder: dist
    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ alt_name }}-{{ version }}.tar.gz
    sha256: 4a99acc273d2f98add23a89b94d4dd9e14969c01214c8514bfa78e4e9364c7e2
  - folder: src_for_test
    url: https://github.com/adamchainz/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
    sha256: d2ed8ebef04133d69bce09114bbf66be0d404d725597874a644318af6e0b3e28

build:
  skip: true  # [py<39]
  script: cd dist && {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - python
    - python-dateutil

test:
  source_files:
    - src_for_test/tests
  imports:
    - time_machine
  commands:
    - pip check
    # test_move_to_datetime and test_fixture_used_tick_true failing on macos due to a failed 'first < second' assertion
    # whereby first = second. No idea why.
    # on windows tests cannot be executed because in conftest.py
    - pytest -v -k 'not (test_move_to_datetime or test_fixture_used_tick_true)' src_for_test/tests  # [osx and arm64 and (not py==39)]
    - pytest -v src_for_test/tests  # [not (win or (osx and arm64) or py==39)]
  requires:
    - pip
    - backports.zoneinfo  # [py<39]
    - coverage
    - pytest
    - pytest-randomly
    - python-dateutil

about:
  home: https://github.com/adamchainz/time-machine
  summary: Travel through time in your tests.
  description: |
    time-machine is intended to combine the advantages of freezegun and libfaketime. It works without LD_PRELOAD but
    still mocks the standard library functions everywhere they may be referenced. It does so by modifying the built-in
    functions at the C level, to point them through wrappers that return different values when mocking. Normally in
    Python, built-in functions are immutable, but time-machine overcomes this by using C code to replace their function
    pointers.
  license: MIT
  license_file: dist/LICENSE
  license_family: MIT
  doc_url: https://adamj.eu/tech/2020/06/03/introducing-time-machine/
  dev_url: https://github.com/adamchainz/time-machine

extra:
  recipe-maintainers:
    - bollwyvl
